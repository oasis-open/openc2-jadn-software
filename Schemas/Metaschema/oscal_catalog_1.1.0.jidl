     package: "http://csrc.nist.gov/ns/oscal/1.1.0/oscal-catalog-schema.json"
     exports: ["$Root"]
      config: {"$MaxString": 1000, "$FieldName": "^[$a-z][-_$A-Za-z0-9]{0,63}$"}
     comment: "OSCAL Control Catalog Model: JSON Schema"

$Root = Record
   1 $schema          URIReferenceDatatype optional // A JSON Schema directive to bind a specific schema to its document instance.
   2 catalog          Catalog                      // A structured, organized collection of control information.

Catalog = Record                                   // A structured, organized collection of control information.
   1 uuid             UUIDDatatype                 // Provides a globally unique means to identify a given catalog instance.
   2 metadata         Metadata                     // Provides information about the containing document, and defines concepts that are shared across the document.
   3 params           Params optional              // Parameters provide a mechanism for the dynamic assignment of value(s) in a control.
   4 controls         Controls optional            // A structured object representing a requirement or guideline, which when implemented will reduce an aspect of risk related to an information system and its information.
   5 groups           Groups optional              // A group of controls, or of groups of controls.
   6 back-matter      Back-matter optional         // A collection of resources that may be referenced from within the OSCAL document instance.

Params = ArrayOf(Parameter){1..*}

Controls = ArrayOf(Control){1..*}

Groups = ArrayOf(Group){1..*}

Group = Record                                     // A group of controls, or of groups of controls.
   1 id               TokenDatatype optional       // Identifies the group for the purpose of cross-linking within the defining instance or from other instances that reference the catalog.
   2 class            TokenDatatype optional       // A textual label that provides a sub-type or characterization of the group.
   3 title            String                       // A name given to the group, which may be used by a tool for display and navigation.
   4 params           Params optional              // Parameters provide a mechanism for the dynamic assignment of value(s) in a control.
   5 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   6 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   7 parts            Parts optional               // An annotated, markup-based textual element of a control's or catalog group's definition, or a child of another part.
   8 groups           Groups optional              // A group of controls, or of groups of controls.
   9 controls         Controls optional            // A structured object representing a requirement or guideline, which when implemented will reduce an aspect of risk related to an information system and its information.

Props = ArrayOf(Property){1..*}

Links = ArrayOf(Link){1..*}

Parts = ArrayOf(Part){1..*}

Control = Record                                   // A structured object representing a requirement or guideline, which when implemented will reduce an aspect of risk related to an information system and its information.
   1 id               TokenDatatype                // Identifies a control such that it can be referenced in the defining catalog and other OSCAL instances (e.g., profiles).
   2 class            TokenDatatype optional       // A textual label that provides a sub-type or characterization of the control.
   3 title            String                       // A name given to the control, which may be used by a tool for display and navigation.
   4 params           Params optional              // Parameters provide a mechanism for the dynamic assignment of value(s) in a control.
   5 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   6 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   7 parts            Parts optional               // An annotated, markup-based textual element of a control's or catalog group's definition, or a child of another part.
   8 controls         Controls optional            // A structured object representing a requirement or guideline, which when implemented will reduce an aspect of risk related to an information system and its information.

Part = Record                                      // An annotated, markup-based textual element of a control's or catalog group's definition, or a child of another part.
   1 id               TokenDatatype optional       // A unique identifier for the part.
   2 name             TokenDatatype                // A textual label that uniquely identifies the part's semantic type, which exists in a value space qualified by the ns.
   3 ns               URIDatatype optional         // An optional namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.
   4 class            TokenDatatype optional       // An optional textual providing a sub-type or characterization of the part's name, or a category to which the part belongs.
   5 title            String optional              // An optional name given to the part, which may be used by a tool for display and navigation.
   6 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   7 prose            String optional              // Permits multiple paragraphs, lists, tables etc.
   8 parts            Parts optional               // An annotated, markup-based textual element of a control's or catalog group's definition, or a child of another part.
   9 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.

Parameter = Record                                 // Parameters provide a mechanism for the dynamic assignment of value(s) in a control.
   1 id               TokenDatatype                // A unique identifier for the parameter.
   2 class            TokenDatatype optional       // A textual label that provides a characterization of the type, purpose, use or scope of the parameter.
   3 depends-on       TokenDatatype optional       // (deprecated) Another parameter invoking this one. This construct has been deprecated and should not be used.
   4 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   5 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   6 label            String optional              // A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.
   7 usage            String optional              // Describes the purpose and use of a parameter.
   8 constraints      Constraints optional         // A formal or informal expression of a constraint or test.
   9 guidelines       Guidelines optional          // A prose statement that provides a recommendation for the use of a parameter.
  10 values           Values optional              // A parameter value or set of values.
  11 select           Parameter-selection optional // Presenting a choice among alternatives.
  12 remarks          Remarks optional             // Additional commentary about the containing object.

Constraints = ArrayOf(Parameter-constraint){1..*}

Guidelines = ArrayOf(Parameter-guideline){1..*}

Values = ArrayOf(StringDatatype){1..*}

Parameter-constraint = Record                      // A formal or informal expression of a constraint or test.
   1 description      String optional              // A textual summary of the constraint to be applied.
   2 tests            Tests optional               // A test expression which is expected to be evaluated by a tool.

Tests = ArrayOf(Test){1..*}

Test = Record                                      // A test expression which is expected to be evaluated by a tool.
   1 expression       StringDatatype               // A formal (executable) expression of a constraint.
   2 remarks          Remarks optional             // Additional commentary about the containing object.

Parameter-guideline = Record                       // A prose statement that provides a recommendation for the use of a parameter.
   1 prose            String                       // Prose permits multiple paragraphs, lists, tables etc.

Parameter-selection = Record                       // Presenting a choice among alternatives.
   1 how-many         Parameter-selection$how-many optional // Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.
   2 choice           Choice1 optional             // A value selection among several such options.

Parameter-selection$how-many = Choice              // Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.
   1 c1               TokenDatatype
   2 c2               Parameter-selection$how-many$2

Parameter-selection$how-many$2 = Enumerated
   1 one
   2 one-or-more

Choice1 = ArrayOf(String){1..*}

Choice1-item = String                              // A value selection among several such options.

Include-all = Record                               // Include all controls from the imported catalog or profile resources.

Metadata = Record                                  // Provides information about the containing document, and defines concepts that are shared across the document.
   1 title            String                       // A name given to the document, which may be used by a tool for display and navigation.
   2 published        DateTimeWithTimezoneDatatype optional // The date and time the document was last made available.
   3 last-modified    DateTimeWithTimezoneDatatype // The date and time the document was last stored for later retrieval.
   4 version          StringDatatype               // Used to distinguish a specific revision of an OSCAL document from other previous and future versions.
   5 oscal-version    StringDatatype               // The OSCAL model version the document was authored against and will conform to as valid.
   6 revisions        Revisions optional           // An entry in a sequential list of revisions to the containing document, expected to be in reverse chronological order (i.e. latest first).
   7 document-ids     Document-ids optional        // A document identifier qualified by an identifier scheme.
   8 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   9 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
  10 roles            Roles optional               // Defines a function, which might be assigned to a party in a specific situation.
  11 locations        Locations optional           // A physical point of presence, which may be associated with people, organizations, or other concepts within the current or linked OSCAL document.
  12 parties          Parties optional             // An organization or person, which may be associated with roles or other concepts within the current or linked OSCAL document.
  13 responsible-parties Responsible-parties optional // A reference to a set of persons and/or organizations that have responsibility for performing the referenced role in the context of the containing object.
  14 actions          Actions optional             // An action applied by a role within a given party to the content.
  15 remarks          Remarks optional             // Additional commentary about the containing object.

Revisions = ArrayOf(Revision){1..*}

Revision = Record                                  // An entry in a sequential list of revisions to the containing document, expected to be in reverse chronological order (i.e. latest first).
   1 title            String optional              // A name given to the document revision, which may be used by a tool for display and navigation.
   2 published        DateTimeWithTimezoneDatatype optional // The date and time the document was last made available.
   3 last-modified    DateTimeWithTimezoneDatatype optional // The date and time the document was last stored for later retrieval.
   4 version          StringDatatype               // Used to distinguish a specific revision of an OSCAL document from other previous and future versions.
   5 oscal-version    StringDatatype optional      // The OSCAL model version the document was authored against and will conform to as valid.
   6 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   7 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   8 remarks          Remarks optional             // Additional commentary about the containing object.

Document-ids = ArrayOf(Document-id){1..*}

Roles = ArrayOf(Role){1..*}

Role = Record                                      // Defines a function, which might be assigned to a party in a specific situation.
   1 id               TokenDatatype                // A unique identifier for the role.
   2 title            String                       // A name given to the role, which may be used by a tool for display and navigation.
   3 short-name       StringDatatype optional      // A short common name, abbreviation, or acronym for the role.
   4 description      String optional              // A summary of the role's purpose and associated responsibilities.
   5 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   6 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   7 remarks          Remarks optional             // Additional commentary about the containing object.

Locations = ArrayOf(Location){1..*}

Location = Record                                  // A physical point of presence, which may be associated with people, organizations, or other concepts within the current or linked OSCAL document.
   1 uuid             UUIDDatatype                 // A unique ID for the location, for reference.
   2 title            String optional              // A name given to the location, which may be used by a tool for display and navigation.
   3 address          Address optional             // A postal address for the location.
   4 email-addresses  Email-addresses optional     // An email address as defined by RFC 5322 Section 3.4.1.
   5 telephone-numbers Telephone-numbers optional  // A telephone service number as defined by ITU-T E.164.
   6 urls             Urls optional                // The uniform resource locator (URL) for a web site or other resource associated with the location.
   7 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   8 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   9 remarks          Remarks optional             // Additional commentary about the containing object.

Email-addresses = ArrayOf(EmailAddressDatatype){1..*}

Telephone-numbers = ArrayOf(Telephone-number){1..*}

Urls = ArrayOf(URIDatatype){1..*}

Parties = ArrayOf(Party){1..*}

Party = Record                                     // An organization or person, which may be associated with roles or other concepts within the current or linked OSCAL document.
   1 uuid             UUIDDatatype                 // A unique identifier for the party.
   2 type             Party$type                   // A category describing the kind of party the object describes.
   3 name             StringDatatype optional      // The full name of the party. This is typically the legal name associated with the party.
   4 short-name       StringDatatype optional      // A short common name, abbreviation, or acronym for the party.
   5 external-ids     External-ids optional        // An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID).
   6 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   7 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   8 email-addresses  Email-addresses optional     // An email address as defined by RFC 5322 Section 3.4.1.
   9 telephone-numbers Telephone-numbers optional  // A telephone service number as defined by ITU-T E.164.
  10 addresses        Addresses optional           // A postal address for the location.
  11 location-uuids   Location-uuids optional      // Reference to a location by UUID.
  12 member-of-organizations Member-of-organizations optional // A reference to another party by UUID, typically an organization, that this subject is associated with.
  13 remarks          Remarks optional             // Additional commentary about the containing object.

Party$type = Choice                                // A category describing the kind of party the object describes.
   1 c1               StringDatatype
   2 c2               Party$type$2

Party$type$2 = Enumerated
   1 person
   2 organization

External-ids = ArrayOf(External-id){1..*}

External-id = Record                               // An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID).
   1 scheme           External-id$scheme           // Indicates the type of external identifier.
   2 id               StringDatatype

External-id$scheme = Choice                        // Indicates the type of external identifier.
   1 c1               URIDatatype
   2 c2               External-id$scheme$2

External-id$scheme$2 = Enumerated
   1 http://orcid.org/

Addresses = ArrayOf(Address){1..*}

Location-uuids = ArrayOf(UUIDDatatype){1..*}

Member-of-organizations = ArrayOf(UUIDDatatype){1..*}

Responsible-parties = ArrayOf(Responsible-party){1..*}

Actions = ArrayOf(Action){1..*}

Back-matter = Record                               // A collection of resources that may be referenced from within the OSCAL document instance.
   1 resources        Resources optional           // A resource associated with content in the containing document instance. A resource may be directly included in the document using base64 encoding or may point to one or more equivalent internet resources.

Resources = ArrayOf(Resource){1..*}

Resource = Record                                  // A resource associated with content in the containing document instance. A resource may be directly included in the document using base64 encoding or may point to one or more equivalent internet resources.
   1 uuid             UUIDDatatype                 // A unique identifier for a resource.
   2 title            String optional              // An optional name given to the resource, which may be used by a tool for display and navigation.
   3 description      String optional              // An optional short summary of the resource used to indicate the purpose of the resource.
   4 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   5 document-ids     Document-ids optional        // A document identifier qualified by an identifier scheme.
   6 citation         Resource optional            // An optional citation consisting of end note text using structured markup.
   7 rlinks           Rlinks optional              // A URL-based pointer to an external resource with an optional hash for verification and change detection.
   8 base64           Resource optional            // A resource encoded using the Base64 alphabet defined by RFC 2045.
   9 remarks          Remarks optional             // Additional commentary about the containing object.

Rlinks = ArrayOf(Rlink){1..*}

Rlink = Record                                     // A URL-based pointer to an external resource with an optional hash for verification and change detection.
   1 href             URIReferenceDatatype         // A resolvable URL pointing to the referenced resource.
   2 media-type       StringDatatype optional      // A label that indicates the nature of a resource, as a data serialization or format.
   3 hashes           Hashes optional              // A representation of a cryptographic digest generated over a resource using a specified hash algorithm.

Hashes = ArrayOf(Hash){1..*}

Property = Record                                  // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   1 name             TokenDatatype                // A textual label, within a namespace, that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.
   2 uuid             UUIDDatatype optional        // A unique identifier for a property.
   3 ns               URIDatatype optional         // A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.
   4 value            StringDatatype               // Indicates the value of the attribute, characteristic, or quality.
   5 class            TokenDatatype optional       // A textual label that provides a sub-type or characterization of the property's name.
   6 group            TokenDatatype optional       // An identifier for relating distinct sets of properties.
   7 remarks          Remarks optional             // Additional commentary about the containing object.

Link = Record                                      // A reference to a local or remote resource, that has a specific relation to the containing object.
   1 href             URIReferenceDatatype         // A resolvable URL reference to a resource.
   2 rel              Link$rel optional            // Describes the type of relationship provided by the link's hypertext reference. This can be an indicator of the link's purpose.
   3 media-type       StringDatatype optional      // A label that indicates the nature of a resource, as a data serialization or format.
   4 resource-fragment StringDatatype optional     // In case where the href points to a back-matter/resource, this value will indicate the URI fragment to append to any rlink associated with the resource. This value MUST be URI encoded.
   5 text             String optional              // A textual label to associate with the link, which may be used for presentation in a tool.

Link$rel = Choice                                  // Describes the type of relationship provided by the link's hypertext reference. This can be an indicator of the link's purpose.
   1 c1               TokenDatatype
   2 c2               Link$rel$2

Link$rel$2 = Enumerated
   1 reference

Responsible-party = Record                         // A reference to a set of persons and/or organizations that have responsibility for performing the referenced role in the context of the containing object.
   1 role-id          TokenDatatype                // A reference to a role performed by a party.
   2 party-uuids      Party-uuids                  // Reference to a party by UUID.
   3 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   4 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   5 remarks          Remarks optional             // Additional commentary about the containing object.

Party-uuids = ArrayOf(UUIDDatatype){1..*}

Action = Record                                    // An action applied by a role within a given party to the content.
   1 uuid             UUIDDatatype                 // A unique identifier that can be used to reference this defined action elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.
   2 date             DateTimeWithTimezoneDatatype optional // The date and time when the action occurred.
   3 type             TokenDatatype                // The type of action documented by the assembly, such as an approval.
   4 system           URIDatatype                  // Specifies the action type system used.
   5 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   6 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   7 responsible-parties Responsible-parties optional // A reference to a set of persons and/or organizations that have responsibility for performing the referenced role in the context of the containing object.
   8 remarks          Remarks optional             // Additional commentary about the containing object.

Responsible-role = Record                          // A reference to a role with responsibility for performing a function relative to the containing object, optionally associated with a set of persons and/or organizations that perform that role.
   1 role-id          TokenDatatype                // A human-oriented identifier reference to a role performed.
   2 props            Props optional               // An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.
   3 links            Links optional               // A reference to a local or remote resource, that has a specific relation to the containing object.
   4 party-uuids      Party-uuids optional         // Reference to a party by UUID.
   5 remarks          Remarks optional             // Additional commentary about the containing object.

Hash = Record                                      // A representation of a cryptographic digest generated over a resource using a specified hash algorithm.
   1 algorithm        Hash$algorithm               // The digest method by which a hash is derived.
   2 value            StringDatatype

Hash$algorithm = Choice                            // The digest method by which a hash is derived.
   1 c1               StringDatatype
   2 c2               Hash$algorithm$2

Hash$algorithm$2 = Enumerated
   1 SHA-224
   2 SHA-256
   3 SHA-384
   4 SHA-512
   5 SHA3-224
   6 SHA3-256
   7 SHA3-384
   8 SHA3-512

Remarks = String                                   // Additional commentary about the containing object.

Telephone-number = Record                          // A telephone service number as defined by ITU-T E.164.
   1 type             Telephone-number$type optional // Indicates the type of phone number.
   2 number           StringDatatype

Telephone-number$type = Choice                     // Indicates the type of phone number.
   1 c1               StringDatatype
   2 c2               Telephone-number$type$2

Telephone-number$type$2 = Enumerated
   1 home
   2 office
   3 mobile

Address = Record                                   // A postal address for the location.
   1 type             Address$type optional        // Indicates the type of address.
   2 addr-lines       Addr-lines optional          // A single line of an address.
   3 city             StringDatatype optional      // City, town or geographical region for the mailing address.
   4 state            StringDatatype optional      // State, province or analogous geographical region for a mailing address.
   5 postal-code      StringDatatype optional      // Postal or ZIP code for mailing address.
   6 country          StringDatatype optional      // The ISO 3166-1 alpha-2 country code for the mailing address.

Address$type = Choice                              // Indicates the type of address.
   1 c1               TokenDatatype
   2 c2               Address$type$2

Address$type$2 = Enumerated
   1 home
   2 work

Addr-lines = ArrayOf(StringDatatype){1..*}

Document-id = Record                               // A document identifier qualified by an identifier scheme.
   1 scheme           Document-id$scheme optional  // Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.
   2 identifier       StringDatatype

Document-id$scheme = Choice                        // Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.
   1 c1               URIDatatype
   2 c2               Document-id$scheme$2

Document-id$scheme$2 = Enumerated
   1 http://www.doi.org/

Base64Datatype = String{pattern="^[0-9A-Za-z+/]+={0,2}$"} // Binary data encoded using the Base 64 encoding algorithm as defined by RFC4648.

DateTimeWithTimezoneDatatype = String{pattern="^(((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30)))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?(Z|(-((0[0-9]|1[0-2]):00|0[39]:30)|\+((0[0-9]|1[0-4]):00|(0[34569]|10):30|(0[58]|12):45)))$"} // A string representing a point in time with a required timezone.

EmailAddressDatatype = Choice                      // An email address string formatted according to RFC 6531.
   1 c1               StringDatatype
   2 c2               String

EmailAddressDatatype$2 = String{pattern="^.+@.+$"}

StringDatatype = String{pattern="^\S(.*\S)?$"}     // A non-empty string with leading and trailing whitespace disallowed. Whitespace is: U+9, U+10, U+32 or [ 
	]+

TokenDatatype = String{pattern="^(\p{L}|_)(\p{L}|\p{N}|[.\-_])*$"} // A non-colonized name as defined by XML Schema Part 2: Datatypes Second Edition. https://www.w3.org/TR/xmlschema11-2/#NCName.

URIDatatype = String{pattern="^[a-zA-Z][a-zA-Z0-9+\-.]+:.+$"} // A universal resource identifier (URI) formatted according to RFC3986.

URIReferenceDatatype = String                      // A URI Reference, either a URI or a relative-reference, formatted according to section 4.1 of RFC3986.

UUIDDatatype = String{pattern="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$"} // A type 4 ('random' or 'pseudorandom') or type 5 UUID per RFC 4122.
