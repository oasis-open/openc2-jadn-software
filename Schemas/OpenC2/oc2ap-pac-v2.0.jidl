       title: "OpenC2 Actuator Profile for Security Posture Attribute Collection"
     package: "http://docs.oasis-open.org/openc2/ns/ap-pac/v2.0"
  namespaces: {"ls": "http://docs.oasis-open.org/openc2/ns/types/v2.0"}
     exports: ["Action", "Target", "Args", "Results", "Pairs"]

Action = Enumerated                            // Actions used in profile
   3 query

Target = Choice                                // Profile-defined targets
   1 attrs            Attribute-Specifiers
   2 sbom             SBOM-Specifiers

Args = Map{1..*}

Results = Map{1..*}                            // Profile-defined response results
   1 attrs            PostureAttributes optional
   2 sbom             SBOM-Info optional

Pairs = Map                                    // Targets applicable to each action
   3 query            ArrayOf(Query-Targets) unique

Query-Targets = Enumerated
   1 attrs
   2 sbom

Attribute-Specifiers = Map{1..*}
   1 os_version       Boolean optional
   2 password_min     Boolean optional
   3 file             FileSpecifiers optional

SBOM-Specifiers = Map
   1 type             ArrayOf(Enum[SBOM-Info]) unique
   2 content          ArrayOf(Enum[SBOM-Content]) unique

PostureAttributes = Map{1..*}
   1 os_version       OS-Version optional
   2 password_min     Integer optional
   3 file             File optional

OS-Version = Record
   1 name             String                      // Distribution or product name
   2 version          String                      // Suitable for presentation OS version
   3 major            Integer                     // Major release version
   4 minor            Integer                     // Minor release version
   5 patch            Integer                     // Patch release
   6 build            String                      // Build-specific or variant string
   7 platform         String                      // OS Platform or ID
   8 platform_like    String                      // Closely-related platform
   9 codename         String                      // OS Release codename
  10 arch             OS-Arch                     // OS Architecture
  11 install_date     Integer optional            // Install date of the OS (seconds)
  12 pid_with_namespace String optional
  13 mount_namespace_id String optional

OS-Arch = Enumerated                              // Win: wmic os get osarchitecture, or Unix: uname -m
   1 32-bit
   2 64-bit
   3 x86_32
   4 x86_64

FileSpecifiers = Map{1..*}
   1 path             String optional
   2 hash             ls:Hashes optional

File = Record
   1 data             Binary

SBOM-Info = Map{1..*}
   1 uri              ls:URI optional             // Unique identifier or locator of the SBOM
   2 summary          SBOM-Elements optional      // NTIA Minimumum Elements of an SBOM
   3 content          SBOM-Content optional       // SBOM structured data
   4 blob             SBOM-Blob optional          // Uninterpreted SBOM bytes

SBOM-Elements = Record
   1 supplier         String [1..*]               // Name(s) of entity that creates, defines, and identifies components
   2 component        String [1..*]               // Designation(s) assigned to a unit of software defined by the original supplier
   3 version          String                      // Identifier used by supplier to specify a change from a previously identified version
   4 component_ids    String [1..*]               // Other identifiers used to identify a component, or serve as a look-yp key
   5 dependencies     String [1..*]               // Upstream component(s)
   6 author           String                      // Name of the entity that creates SBOM data for this component
   7 timestamp        DateTime                    // Record of the date and time of the SBOM data assembly

SBOM-Content = Choice
   1 cyclonedx        String                      // Placeholder for CycloneDX data model
   2 spdx2            String                      // Placeholder for SPDX v2.x data model
   3 spdx3            String                      // Placeholder for SPDX v3 data model

SBOM-Blob = Record
   1 format           Enumerated(Enum[SBOM-Content])
   2 data             Binary

DateTime = String{pattern="^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$"} // RFC-3339 format
