{
  "info": {
    "title": "OpenC2 base device schema for LED panel controller using sFractal blinky interface",
    "package": "http://sfractal.com/schemas/blinky-base/v1.0",
    "exports": ["OpenC2-Command", "OpenC2-Response"]
  },

  "types": [
    ["OpenC2-Command", "Record", [], "The Command defines an Action to be performed on a Target", [
      [1, "action", "Action", [], "The task or activity to be performed (i.e., the 'verb')."],
      [2, "target", "Target", [], "The object of the Action. The Action is performed on the Target."],
      [3, "args", "Args", ["[0"], "Additional information that applies to the Command."],
      [4, "profile", "Profile", ["[0"], "The actuator profile defining the function to be performed by the Command."],
      [5, "command_id", "Command-ID", ["[0"], "An identifier of this Command."]
    ]],

    ["Action", "Enumerated", [], "", [
      [3, "query", "Initiate a request for information."],
      [6, "deny", "Prevent a certain event or action from completion, such as preventing a flow from reaching a destination or preventing access."],
      [8, "allow", "Permit access to or execution of a Target."],
      [15, "set", ""],
      [16, "update", "Instruct a component to retrieve, install, process, and operate in accordance with a software update, reconfiguration, or other update."],
      [20, "delete", "Remove an entity (e.g., data, files, flows)."]
    ]],

    ["Target", "Choice", [], "", [
      [9, "features", "Features", [], "A set of items used with the query Action to determine an Actuator's capabilities."],
      [1024, "slpf", "Target$slpf", ["<"], ""],
      [1026, "sbom", "Target$sbom", ["<"], ""],
      [9001, "blinky", "Target$blinky", ["<"], "Profile-defined targets"]
    ]],

    ["Args", "Map", ["{1"], "", [
      [1, "start_time", "Date-Time", ["[0"], "The specific date/time to initiate the Command"],
      [2, "stop_time", "Date-Time", ["[0"], "The specific date/time to terminate the Command"],
      [3, "duration", "Duration", ["[0"], "The length of time for an Command to be in effect"],
      [4, "response_requested", "Response-Type", ["[0"], "The type of Response required for the Command: none, ack, status, complete"],
      [1024, "slpf", "Args$slpf", ["<", "[0"], ""],
      [1026, "sbom", "Args$sbom", ["<", "[0"], ""],
      [9001, "blinky", "Args$blinky", ["<", "[0"], "Profile-defined command arguments"]
    ]],

    ["Profile", "Enumerated", [], "", [
      [1024, "slpf", ""],
      [1026, "sbom", ""],
      [9001, "blinky", ""]
    ]],

    ["OpenC2-Response", "Record", [], "", [
      [1, "status", "Status-Code", [], "An integer status code."],
      [2, "status_text", "String", ["[0"], "A free-form human-readable description of the Response status."],
      [3, "results", "Results", ["[0"], "Map of key:value pairs that contain additional results based on the invoking Command."]
    ]],

    ["Results", "Map", ["{1"], "Response Results", [
      [1, "versions", "SemVer", ["q", "[0", "]10"], "List of OpenC2 language versions supported by this Actuator"],
      [2, "profiles", "Nsid", ["q", "[0", "]0"], "List of profiles supported by this Actuator"],
      [3, "pairs", "Pairs", ["[0"], "DEPRECATED: targets applicable to each supported Action"],
      [4, "rate_limit", "Number", ["y0.0", "[0"], "Maximum number of requests per minute supported by design or policy"],
      [5, "args", "Enumerated", ["#Args", "[0", "]0"], "List of supported Command Arguments"],
      [1024, "slpf", "Results$slpf", ["<", "[0"], ""],
      [1026, "sbom", "Results$sbom", ["<", "[0"], ""],
      [9001, "blinky", "Results$blinky", ["<", "[0"], "Profile-defined results"]
    ]],

    ["Pairs", "Map", ["{1"], "Targets applicable to each action supported by this device", [
      [3, "query", "ArrayOf", ["*QueryTargets", "q"], ""],
      [9001, "blinky", "Pairs$blinky", ["[0", "<"], ""]
    ]],

    ["QueryTargets", "Enumerated", [], "", [
      [9, "features", ""]
    ]],

    ["Target$sbom", "Choice", [], "Profile-defined targets", [
      [1, "sbom", "SBOM-Specifiers$sbom", [], "Return URI IDs for all or specified SBOMs"],
      [2, "sbom_list", "SBOM-List$sbom", [], "Return requested SBOM info for specified IDs"]
    ]],

    ["Args$sbom", "Map", [], "Profile-defined command arguments", []],

    ["Results$sbom", "Map", ["{1"], "Profile-defined response results", [
      [1, "search", "ArrayOf", ["*URI"], "IDs of all SBOMs matching query criteria"],
      [2, "sbom_list", "SBOM-Info$sbom", ["[0", "]0"], "SBOM Info for each ID in sbom_list"]
    ]],

    ["SBOM-Specifiers$sbom", "Map", [], "If none specified, return IDs for all SBOMs", [
      [1, "type", "ArrayOf", ["q", "*#SBOM-Content$sbom", "[0"], "SBOM type"],
      [2, "format", "ArrayOf", ["q", "*DataFormat$sbom", "[0"], "Data format"],
      [3, "info", "ArrayOf", ["*Info$sbom", "{1", "q", "[0"], "Type of SBOM info to return"]
    ]],

    ["SBOM-List$sbom", "Map", [], "", [
      [1, "sids", "URI", ["]0"], "SBOM IDs to return"],
      [2, "info", "ArrayOf", ["*Info$sbom", "{1", "q"], "Type of SBOM info to return"]
    ]],

    ["Info$sbom", "Enumerated", [], "SBOM-Info fields to return", [
      [1, "summary", "NTIA Minimumum Elements of an SBOM"],
      [2, "content", "SBOM structured data"],
      [3, "blob", "Uninterpreted SBOM bytes"]
    ]],

    ["SBOM-Info$sbom", "Map", [], "", [
      [1, "type", "Enumerated", ["#SBOM-Content$sbom"], "SBOM type (name of standard)"],
      [2, "format", "DataFormat$sbom", [], "Data (serialization) format"],
      [3, "sid", "URI", [], "Unique identifier or locator of the SBOM"],
      [4, "summary", "SBOM-Elements$sbom", ["[0"], "NTIA Minimumum Elements of an SBOM"],
      [5, "content", "SBOM-Content$sbom", ["[0"], "SBOM structured data"],
      [6, "blob", "Binary", ["[0"], "Uninterpreted SBOM bytes"]
    ]],

    ["SBOM-Elements$sbom", "Record", [], "", [
      [1, "supplier", "String", ["]0"], "Name of entity that creates, defines, and identifies components"],
      [2, "component", "String", ["]0"], "Designation(s) assigned to a unit of software defined by the original supplier"],
      [3, "version", "String", [], "Identifier used by supplier to specify a change from a previously identified version"],
      [4, "component_ids", "String", ["]0"], "Other identifiers used to identify a component, or serve as a look-yp key"],
      [5, "dependencies", "String", ["]0"], "Upstream component(s)"],
      [6, "author", "String", [], "Name of the entity that creates SBOM data for this component"],
      [7, "timestamp", "DateTime$sbom", [], "Record of the date and time of the SBOM data assembly"]
    ]],

    ["SBOM-Content$sbom", "Choice", [], "", [
      [1, "cyclonedx", "String", [], "Placeholder for CycloneDX data model"],
      [2, "spdx2", "String", [], "Placeholder for SPDX v2.x data model"],
      [3, "spdx3", "String", [], "Placeholder for SPDX v3 data model"]
    ]],

    ["DataFormat$sbom", "Enumerated", [], "Serialization Data Formats", [
      [1, "ttv", "Text Tag-Value"],
      [2, "json", "JSON verbose"],
      [3, "json-m", "JSON concise/minimized"],
      [4, "json-ld", "JSON linked data"],
      [5, "cbor", "CBOR binary"],
      [6, "protobuf", "Protocol Buffers binary"],
      [7, "xml", "XML"],
      [8, "ss-csv", "Spreadsheet comma separated values"]
    ]],

    ["DateTime$sbom", "Integer", ["{0"], "", []],

    ["Target$slpf", "Choice", [], "SLPF targets", [
      [1, "rule_number", "Rule-ID$slpf", [], "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"]
    ]],

    ["Args$slpf", "Map", ["{1"], "SLPF command arguments", [
      [1, "drop_process", "Drop-Process$slpf", ["[0"], "Specifies how to handle denied packets"],
      [2, "persistent", "Boolean", ["[0"], "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"],
      [3, "direction", "Direction$slpf", ["[0"], "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"],
      [4, "insert_rule", "Rule-ID$slpf", ["[0"], "Specifies the identifier of the rule within a list, typically used in a top-down rule list"]
    ]],

    ["Results$slpf", "Map", [], "SLPF results defined in this profile", [
      [1, "rule_number", "Rule-ID$slpf", ["[0"], "Rule identifier returned from allow or deny Command."]
    ]],

    ["Drop-Process$slpf", "Enumerated", [], "", [
      [1, "none", "Drop the packet and do not send a notification to the source of the packet"],
      [2, "reject", "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"],
      [3, "false_ack", "Drop the traffic and send a false acknowledgement"]
    ]],

    ["Direction$slpf", "Enumerated", [], "", [
      [1, "both", "Apply rules to all traffic"],
      [2, "ingress", "Apply rules to incoming traffic only"],
      [3, "egress", "Apply rules to outgoing traffic only"]
    ]],

    ["Rule-ID$slpf", "Integer", [], "Access rule identifier", []],

    ["Target$blinky", "Choice", [], "Profile-defined targets", [
      [1, "led", "String", [], ""],
      [2, "leds", "String", ["]0"], ""]
    ]],

    ["Args$blinky", "Map", ["{1"], "Profile-defined command arguments", []],

    ["Results$blinky", "Map", ["{1"], "Profile-defined response results", []],

    ["Pairs$blinky", "Map", [], "Targets applicable to each action", [
      [15, "set", "ArrayOf", ["*Set-Targets$blinky", "q"], ""]
    ]],

    ["Set-Targets$blinky", "Enumerated", [], "", [
      [1, "led", ""],
      [2, "leds", ""]
    ]],

    ["Features", "ArrayOf", ["*Feature", "{0", "q"], "An array of names used to query a Consumer for its supported capabilities.", []],

    ["URI", "String", ["/uri"], "Uniform Resource Identifier, [[RFC3986]](#rfc3986).", []],

    ["Date-Time", "Integer", ["{0"], "Date and Time", []],

    ["Duration", "Integer", ["{0"], "A length of time", []],

    ["Feature", "Enumerated", [], "Specifies the results to be returned from a query features Command", [
      [1, "versions", "List of OpenC2 Language versions supported by this Consumer"],
      [2, "profiles", "List of profiles supported by this Consumer"],
      [3, "pairs", "List of supported Actions and applicable Targets"],
      [4, "rate_limit", "Maximum number of Commands per minute supported by design or policy"]
    ]],

    ["Nsid", "String", ["{1", "}16"], "A short identifier that refers to a namespace.", []],

    ["Response-Type", "Enumerated", [], "", [
      [0, "none", "No response"],
      [1, "ack", "Respond when Command received"],
      [2, "status", "Respond with progress toward Command completion"],
      [3, "complete", "Respond when all aspects of Command completed"]
    ]],

    ["Status-Code", "Enumerated", ["="], "", [
      [102, "Processing", "an interim Response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"],
      [200, "OK", "the Command has succeeded"],
      [201, "Created", "the Command has succeeded and a new resource has been created as a result of it"],
      [400, "Bad Request", "the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"],
      [401, "Unauthorized", "the Command Message lacks valid authentication credentials for the target resource or authorization has been refused for the submitted credentials"],
      [403, "Forbidden", "the Consumer understood the Command but refuses to authorize it"],
      [404, "Not Found", "the Consumer has not found anything matching the Command"],
      [500, "Internal Error", "the Consumer encountered an unexpected condition that prevented it from performing the Command"],
      [501, "Not Implemented", "the Consumer does not support the functionality required to perform the Command"],
      [503, "Service Unavailable", "the Consumer is currently unable to perform the Command due to a temporary overloading or maintenance of the Consumer"]
    ]],

    ["Command-ID", "String", ["%^\\S{0,36}$"], "Command Identifier", []],

    ["SemVer", "String", ["%^(\\d{1,4})(\\.(\\d{1,6})){0,2}$"], "Major.Minor.Patch version number", []]
  ]
}
