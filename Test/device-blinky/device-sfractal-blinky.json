{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://sfractal.com/schemas/blinky/v1.0",
  "title": "OpenC2 device schema for LED panel controller using sFractal blinky interface",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "openc2_command": {
      "$ref": "#/definitions/OpenC2-Command"
    },
    "openc2_response": {
      "$ref": "#/definitions/OpenC2-Response"
    }
  },
  "definitions": {
    "OpenC2-Command": {
      "title": "OpenC2 Command",
      "type": "object",
      "description": "The Command defines an Action to be performed on a Target",
      "additionalProperties": false,
      "required": [
        "action",
        "target"
      ],
      "maxProperties": 100,
      "properties": {
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The task or activity to be performed (i.e., the 'verb')."
        },
        "target": {
          "$ref": "#/definitions/Target",
          "description": "The object of the Action. The Action is performed on the Target."
        },
        "args": {
          "$ref": "#/definitions/Args",
          "description": "Additional information that applies to the Command."
        },
        "actuator": {
          "$ref": "#/definitions/Actuator",
          "description": "The subject of the Action. The Actuator executes the Action on the Target."
        },
        "command_id": {
          "$ref": "#/definitions/Command-ID",
          "description": "An identifier of this Command."
        }
      }
    },
    "OpenC2-Response": {
      "title": "OpenC2 Response",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ],
      "maxProperties": 100,
      "properties": {
        "status": {
          "$ref": "#/definitions/Status-Code",
          "description": "An integer status code."
        },
        "status_text": {
          "type": "string",
          "description": "A free-form human-readable description of the Response status.",
          "maxLength": 255
        },
        "results": {
          "$ref": "#/definitions/Results",
          "description": "Map of key:value pairs that contain additional results based on the invoking Command."
        }
      }
    },
    "Action": {
      "title": "Action",
      "type": "string",
      "enum": [
        "query",
        "deny",
        "allow",
        "set",
        "update",
        "delete"
      ]
    },
    "Target": {
      "title": "Target",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "features": {
          "$ref": "#/definitions/Features",
          "description": "A set of items used with the query Action to determine an Actuator's capabilities."
        },
        "slpf": {
          "$ref": "#/definitions/Target$slpf",
          "description": ""
        },
        "sbom": {
          "$ref": "#/definitions/Target$sbom",
          "description": ""
        },
        "pac": {
          "$ref": "#/definitions/Target$pac",
          "description": ""
        },
        "blinky": {
          "$ref": "#/definitions/Target$blinky",
          "description": ""
        }
      }
    },
    "Args": {
      "title": "Args",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "start_time": {
          "$ref": "#/definitions/Date-Time",
          "description": "The specific date/time to initiate the Command"
        },
        "stop_time": {
          "$ref": "#/definitions/Date-Time",
          "description": "The specific date/time to terminate the Command"
        },
        "duration": {
          "$ref": "#/definitions/Duration",
          "description": "The length of time for an Command to be in effect"
        },
        "response_requested": {
          "$ref": "#/definitions/Response-Type",
          "description": "The type of Response required for the Command: none, ack, status, complete"
        },
        "slpf": {
          "$ref": "#/definitions/Args$slpf",
          "description": ""
        },
        "sbom": {
          "$ref": "#/definitions/Args$sbom",
          "description": ""
        },
        "pac": {
          "$ref": "#/definitions/Args$pac",
          "description": ""
        },
        "blinky": {
          "$ref": "#/definitions/Args$blinky",
          "description": ""
        }
      }
    },
    "Actuator": {
      "title": "Actuator",
      "type": "string",
      "enum": [
        "slpf",
        "sbom",
        "pac",
        "blinky"
      ]
    },
    "Results": {
      "title": "Results",
      "type": "object",
      "description": "Response Results",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "versions": {
          "type": "array",
          "description": "List of OpenC2 language versions supported by this Actuator",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/SemVer",
            "description": "List of OpenC2 language versions supported by this Actuator"
          }
        },
        "profiles": {
          "type": "array",
          "description": "List of profiles supported by this Actuator",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Nsid",
            "description": "List of profiles supported by this Actuator"
          }
        },
        "pairs": {
          "$ref": "#/definitions/Pairs",
          "description": ""
        },
        "rate_limit": {
          "type": "number",
          "description": "Maximum number of requests per minute supported by design or policy",
          "minimum": 0.0
        },
        "args": {
          "type": "array",
          "description": "List of supported Command Arguments",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "List of supported Command Arguments",
            "enum": [
              "start_time",
              "stop_time",
              "duration",
              "response_requested",
              "slpf",
              "sbom",
              "pac",
              "blinky"
            ]
          }
        },
        "slpf": {
          "$ref": "#/definitions/Results$slpf",
          "description": ""
        },
        "sbom": {
          "$ref": "#/definitions/Results$sbom",
          "description": ""
        },
        "pac": {
          "$ref": "#/definitions/Results$pac",
          "description": ""
        },
        "blinky": {
          "$ref": "#/definitions/Results$blinky",
          "description": ""
        }
      }
    },
    "Pairs": {
      "title": "Pairs",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "query",
        "slpf",
        "sbom",
        "pac",
        "blinky"
      ],
      "maxProperties": 100,
      "properties": {
        "query": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/QueryTargets"
          }
        },
        "slpf": {
          "$ref": "#/definitions/Pairs$slpf",
          "description": ""
        },
        "sbom": {
          "$ref": "#/definitions/Pairs$sbom",
          "description": ""
        },
        "pac": {
          "$ref": "#/definitions/Pairs$pac",
          "description": ""
        },
        "blinky": {
          "$ref": "#/definitions/Pairs$blinky",
          "description": ""
        }
      }
    },
    "QueryTargets": {
      "title": "QueryTargets",
      "type": "string",
      "enum": [
        "features"
      ]
    },
    "Target$sbom": {
      "title": "Target$sbom",
      "type": "object",
      "description": "Profile-defined targets",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "sbom": {
          "$ref": "#/definitions/SBOM-Specifiers$sbom",
          "description": "Return URI IDs for all or specified SBOMs"
        },
        "sbom_list": {
          "$ref": "#/definitions/SBOM-List$sbom",
          "description": "Return requested SBOM info for specified IDs"
        }
      }
    },
    "Args$sbom": {
      "title": "Args$sbom",
      "type": "object",
      "description": "Profile-defined command arguments",
      "additionalProperties": false,
      "maxProperties": 100,
      "properties": {}
    },
    "Results$sbom": {
      "title": "Results$sbom",
      "type": "object",
      "description": "Profile-defined response results",
      "additionalProperties": false,
      "required": [
        "search"
      ],
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "search": {
          "type": "array",
          "description": "IDs of all SBOMs matching query criteria",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/URI"
          }
        },
        "sbom_list": {
          "type": "array",
          "description": "SBOM Info for each ID in sbom_list",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/SBOM-Info$sbom",
            "description": "SBOM Info for each ID in sbom_list"
          }
        }
      }
    },
    "Pairs$sbom": {
      "title": "Pairs$sbom",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "query"
      ],
      "maxProperties": 100,
      "properties": {
        "query": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Query-Targets$sbom"
          }
        }
      }
    },
    "Query-Targets$sbom": {
      "title": "Query Targets$sbom",
      "type": "string",
      "enum": [
        "search",
        "sbom_list"
      ]
    },
    "SBOM-Specifiers$sbom": {
      "title": "SBOM Specifiers$sbom",
      "type": "object",
      "description": "Query: If none specified, return IDs for all SBOMs",
      "additionalProperties": false,
      "maxProperties": 100,
      "properties": {
        "type": {
          "type": "array",
          "description": "SBOM type",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "enum": [
              "cyclonedx",
              "spdx2",
              "spdx3"
            ]
          }
        },
        "format": {
          "type": "array",
          "description": "Data format",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/DataFormat$sbom"
          }
        },
        "info": {
          "type": "array",
          "description": "Type of SBOM info to return",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Info$sbom"
          }
        }
      }
    },
    "SBOM-List$sbom": {
      "title": "SBOM List$sbom",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "info"
      ],
      "maxProperties": 100,
      "properties": {
        "sids": {
          "type": "array",
          "description": "Query: IDs of SBOMs to return (return all if none listed)",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/URI",
            "description": "Query: IDs of SBOMs to return (return all if none listed)"
          }
        },
        "info": {
          "type": "array",
          "description": "Type of info to return for each SBOM",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Info$sbom"
          }
        }
      }
    },
    "Info$sbom": {
      "title": "Info$sbom",
      "type": "string",
      "description": "SBOM-Info fields to return",
      "enum": [
        "summary",
        "content",
        "blob"
      ]
    },
    "SBOM-Info$sbom": {
      "title": "SBOM Info$sbom",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "format",
        "sid"
      ],
      "maxProperties": 100,
      "properties": {
        "type": {
          "type": "string",
          "description": "SBOM type (name of standard)",
          "enum": [
            "cyclonedx",
            "spdx2",
            "spdx3"
          ]
        },
        "format": {
          "$ref": "#/definitions/DataFormat$sbom",
          "description": "Data (serialization) format"
        },
        "sid": {
          "$ref": "#/definitions/URI",
          "description": "Unique identifier or locator of the SBOM"
        },
        "summary": {
          "$ref": "#/definitions/SBOM-Elements$sbom",
          "description": "NTIA Minimumum Elements of an SBOM"
        },
        "content": {
          "$ref": "#/definitions/SBOM-Content$sbom",
          "description": "SBOM structured data"
        },
        "blob": {
          "type": "string",
          "description": "Uninterpreted SBOM bytes",
          "contentEncoding": "base64url"
        }
      }
    },
    "SBOM-Elements$sbom": {
      "title": "SBOM Elements$sbom",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "supplier",
        "component",
        "version",
        "component_ids",
        "dependencies",
        "author",
        "timestamp"
      ],
      "maxProperties": 100,
      "properties": {
        "supplier": {
          "type": "array",
          "description": "Name of entity that creates, defines, and identifies components",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Name of entity that creates, defines, and identifies components",
            "maxLength": 255
          }
        },
        "component": {
          "type": "array",
          "description": "Designation(s) assigned to a unit of software defined by the original supplier",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Designation(s) assigned to a unit of software defined by the original supplier",
            "maxLength": 255
          }
        },
        "version": {
          "type": "string",
          "description": "Identifier used by supplier to specify a change from a previously identified version",
          "maxLength": 255
        },
        "component_ids": {
          "type": "array",
          "description": "Other identifiers used to identify a component, or serve as a look-yp key",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Other identifiers used to identify a component, or serve as a look-yp key",
            "maxLength": 255
          }
        },
        "dependencies": {
          "type": "array",
          "description": "Upstream component(s)",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Upstream component(s)",
            "maxLength": 255
          }
        },
        "author": {
          "type": "string",
          "description": "Name of the entity that creates SBOM data for this component",
          "maxLength": 255
        },
        "timestamp": {
          "$ref": "#/definitions/DateTime$sbom",
          "description": "Record of the date and time of the SBOM data assembly"
        }
      }
    },
    "SBOM-Content$sbom": {
      "title": "SBOM Content$sbom",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "cyclonedx": {
          "type": "string",
          "description": "Placeholder for CycloneDX data model",
          "maxLength": 255
        },
        "spdx2": {
          "type": "string",
          "description": "Placeholder for SPDX v2.x data model",
          "maxLength": 255
        },
        "spdx3": {
          "type": "string",
          "description": "Placeholder for SPDX v3 data model",
          "maxLength": 255
        }
      }
    },
    "DataFormat$sbom": {
      "title": "DataFormat$sbom",
      "type": "string",
      "description": "Serialization Data Formats",
      "enum": [
        "ttv",
        "json",
        "json-m",
        "json-ld",
        "cbor",
        "protobuf",
        "xml",
        "ss-csv"
      ]
    },
    "DateTime$sbom": {
      "title": "DateTime$sbom",
      "type": "integer",
      "minimum": 0
    },
    "Target$slpf": {
      "title": "Target$slpf",
      "type": "object",
      "description": "SLPF targets",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "rule_number": {
          "$ref": "#/definitions/Rule-ID$slpf",
          "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
        }
      }
    },
    "Args$slpf": {
      "title": "Args$slpf",
      "type": "object",
      "description": "SLPF command arguments",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "drop_process": {
          "$ref": "#/definitions/Drop-Process$slpf",
          "description": "Specifies how to handle denied packets"
        },
        "persistent": {
          "type": "boolean",
          "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
        },
        "direction": {
          "$ref": "#/definitions/Direction$slpf",
          "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
        },
        "insert_rule": {
          "$ref": "#/definitions/Rule-ID$slpf",
          "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
        }
      }
    },
    "Results$slpf": {
      "title": "Results$slpf",
      "type": "object",
      "description": "SLPF results defined in this profile",
      "additionalProperties": false,
      "maxProperties": 100,
      "properties": {
        "rule_number": {
          "$ref": "#/definitions/Rule-ID$slpf",
          "description": "Rule identifier returned from allow or deny Command."
        }
      }
    },
    "Pairs$slpf": {
      "title": "Pairs$slpf",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "deny",
        "allow",
        "update",
        "delete"
      ],
      "maxProperties": 100,
      "properties": {
        "deny": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Deny-Targets$slpf"
          }
        },
        "allow": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Allow-Targets$slpf"
          }
        },
        "update": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Update-Targets$slpf"
          }
        },
        "delete": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Delete-Targets$slpf"
          }
        }
      }
    },
    "Deny-Targets$slpf": {
      "title": "Deny Targets$slpf",
      "type": "string",
      "enum": [
        "ipv4_net",
        "ipv6_net",
        "ipv4_connection",
        "ipv6_connection"
      ]
    },
    "Allow-Targets$slpf": {
      "title": "Allow Targets$slpf",
      "type": "string",
      "enum": [
        "ipv4_net",
        "ipv6_net",
        "ipv4_connection",
        "ipv6_connection"
      ]
    },
    "Update-Targets$slpf": {
      "title": "Update Targets$slpf",
      "type": "string",
      "enum": [
        "file"
      ]
    },
    "Delete-Targets$slpf": {
      "title": "Delete Targets$slpf",
      "type": "string",
      "enum": [
        "rule_number"
      ]
    },
    "Drop-Process$slpf": {
      "title": "Drop Process$slpf",
      "type": "string",
      "enum": [
        "none",
        "reject",
        "false_ack"
      ]
    },
    "Direction$slpf": {
      "title": "Direction$slpf",
      "type": "string",
      "enum": [
        "both",
        "ingress",
        "egress"
      ]
    },
    "Rule-ID$slpf": {
      "title": "Rule ID$slpf",
      "type": "integer",
      "description": "Access rule identifier"
    },
    "Target$pac": {
      "title": "Target$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "attrs": {
          "$ref": "#/definitions/Attribute-Specifiers$pac",
          "description": ""
        },
        "sbom": {
          "$ref": "#/definitions/SBOM-Specifiers$pac",
          "description": ""
        }
      }
    },
    "Args$pac": {
      "title": "Args$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {}
    },
    "Results$pac": {
      "title": "Results$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "attrs": {
          "$ref": "#/definitions/PostureAttributes$pac",
          "description": ""
        },
        "sbom": {
          "$ref": "#/definitions/SBOM-Info$pac",
          "description": ""
        }
      }
    },
    "Pairs$pac": {
      "title": "Pairs$pac",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "query"
      ],
      "maxProperties": 100,
      "properties": {
        "query": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Query-Targets$pac"
          }
        }
      }
    },
    "Query-Targets$pac": {
      "title": "Query Targets$pac",
      "type": "string",
      "enum": [
        "attrs",
        "sbom"
      ]
    },
    "Attribute-Specifiers$pac": {
      "title": "Attribute Specifiers$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "os_version": {
          "type": "boolean"
        },
        "password_min": {
          "type": "boolean"
        },
        "file": {
          "$ref": "#/definitions/FileSpecifiers$pac",
          "description": ""
        }
      }
    },
    "SBOM-Specifiers$pac": {
      "title": "SBOM Specifiers$pac",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "content"
      ],
      "maxProperties": 100,
      "properties": {
        "type": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "enum": [
              "uri",
              "summary",
              "content",
              "blob"
            ]
          }
        },
        "content": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "enum": [
              "cyclonedx",
              "spdx2",
              "spdx3"
            ]
          }
        }
      }
    },
    "PostureAttributes$pac": {
      "title": "PostureAttributes$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "os_version": {
          "$ref": "#/definitions/OS-Version$pac",
          "description": ""
        },
        "password_min": {
          "type": "integer"
        },
        "file": {
          "$ref": "#/definitions/File$pac",
          "description": ""
        }
      }
    },
    "OS-Version$pac": {
      "title": "OS Version$pac",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "version",
        "major",
        "minor",
        "patch",
        "build",
        "platform",
        "platform_like",
        "codename",
        "arch"
      ],
      "maxProperties": 100,
      "properties": {
        "name": {
          "type": "string",
          "description": "Distribution or product name",
          "maxLength": 255
        },
        "version": {
          "type": "string",
          "description": "Suitable for presentation OS version",
          "maxLength": 255
        },
        "major": {
          "type": "integer",
          "description": "Major release version"
        },
        "minor": {
          "type": "integer",
          "description": "Minor release version"
        },
        "patch": {
          "type": "integer",
          "description": "Patch release"
        },
        "build": {
          "type": "string",
          "description": "Build-specific or variant string",
          "maxLength": 255
        },
        "platform": {
          "type": "string",
          "description": "OS Platform or ID",
          "maxLength": 255
        },
        "platform_like": {
          "type": "string",
          "description": "Closely-related platform",
          "maxLength": 255
        },
        "codename": {
          "type": "string",
          "description": "OS Release codename",
          "maxLength": 255
        },
        "arch": {
          "$ref": "#/definitions/OS-Arch$pac",
          "description": "OS Architecture"
        },
        "install_date": {
          "type": "integer",
          "description": "Install date of the OS (seconds)"
        },
        "pid_with_namespace": {
          "type": "string",
          "maxLength": 255
        },
        "mount_namespace_id": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "OS-Arch$pac": {
      "title": "OS Arch$pac",
      "type": "string",
      "description": "Win: wmic os get osarchitecture, or Unix: uname -m",
      "enum": [
        "32-bit",
        "64-bit",
        "x86_32",
        "x86_64"
      ]
    },
    "FileSpecifiers$pac": {
      "title": "FileSpecifiers$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "path": {
          "type": "string",
          "maxLength": 255
        },
        "hash": {
          "$ref": "#/definitions/Hashes",
          "description": ""
        }
      }
    },
    "File$pac": {
      "title": "File$pac",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "data"
      ],
      "maxProperties": 100,
      "properties": {
        "data": {
          "type": "string",
          "contentEncoding": "base64url"
        }
      }
    },
    "SBOM-Info$pac": {
      "title": "SBOM Info$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "uri": {
          "$ref": "#/definitions/URI",
          "description": "Unique identifier or locator of the SBOM"
        },
        "summary": {
          "$ref": "#/definitions/SBOM-Elements$pac",
          "description": "NTIA Minimumum Elements of an SBOM"
        },
        "content": {
          "$ref": "#/definitions/SBOM-Content$pac",
          "description": "SBOM structured data"
        },
        "blob": {
          "$ref": "#/definitions/SBOM-Blob$pac",
          "description": "Uninterpreted SBOM bytes"
        }
      }
    },
    "SBOM-Elements$pac": {
      "title": "SBOM Elements$pac",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "supplier",
        "component",
        "version",
        "component_ids",
        "dependencies",
        "author",
        "timestamp"
      ],
      "maxProperties": 100,
      "properties": {
        "supplier": {
          "type": "array",
          "description": "Name(s) of entity that creates, defines, and identifies components",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Name(s) of entity that creates, defines, and identifies components",
            "maxLength": 255
          }
        },
        "component": {
          "type": "array",
          "description": "Designation(s) assigned to a unit of software defined by the original supplier",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Designation(s) assigned to a unit of software defined by the original supplier",
            "maxLength": 255
          }
        },
        "version": {
          "type": "string",
          "description": "Identifier used by supplier to specify a change from a previously identified version",
          "maxLength": 255
        },
        "component_ids": {
          "type": "array",
          "description": "Other identifiers used to identify a component, or serve as a look-yp key",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Other identifiers used to identify a component, or serve as a look-yp key",
            "maxLength": 255
          }
        },
        "dependencies": {
          "type": "array",
          "description": "Upstream component(s)",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "Upstream component(s)",
            "maxLength": 255
          }
        },
        "author": {
          "type": "string",
          "description": "Name of the entity that creates SBOM data for this component",
          "maxLength": 255
        },
        "timestamp": {
          "$ref": "#/definitions/Date-Time",
          "description": "Record of the date and time of the SBOM data assembly"
        }
      }
    },
    "SBOM-Content$pac": {
      "title": "SBOM Content$pac",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "cyclonedx": {
          "type": "string",
          "description": "Placeholder for CycloneDX data model",
          "maxLength": 255
        },
        "spdx2": {
          "type": "string",
          "description": "Placeholder for SPDX v2.x data model",
          "maxLength": 255
        },
        "spdx3": {
          "type": "string",
          "description": "Placeholder for SPDX v3 data model",
          "maxLength": 255
        }
      }
    },
    "SBOM-Blob$pac": {
      "title": "SBOM Blob$pac",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "format",
        "data"
      ],
      "maxProperties": 100,
      "properties": {
        "format": {
          "type": "string",
          "enum": [
            "cyclonedx",
            "spdx2",
            "spdx3"
          ]
        },
        "data": {
          "type": "string",
          "contentEncoding": "base64url"
        }
      }
    },
    "Target$blinky": {
      "title": "Target$blinky",
      "type": "object",
      "description": "Profile-defined targets",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "led": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Args$blinky": {
      "title": "Args$blinky",
      "type": "object",
      "description": "Profile-defined command arguments",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {}
    },
    "Results$blinky": {
      "title": "Results$blinky",
      "type": "object",
      "description": "Profile-defined response results",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {}
    },
    "Pairs$blinky": {
      "title": "Pairs$blinky",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "set"
      ],
      "maxProperties": 100,
      "properties": {
        "set": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/Set-Targets$blinky"
          }
        }
      }
    },
    "Set-Targets$blinky": {
      "title": "Set Targets$blinky",
      "type": "string",
      "enum": [
        "led",
        "leds"
      ]
    },
    "Features": {
      "title": "Features",
      "type": "array",
      "description": "An array of names used to query a Consume for its supported capabilities.",
      "uniqueItems": true,
      "maxItems": 100,
      "items": {
        "$ref": "#/definitions/Feature"
      }
    },
    "URI": {
      "title": "URI",
      "type": "string",
      "description": "Uniform Resource Identifier, [[RFC3986]](#rfc3986).",
      "format": "uri",
      "maxLength": 255
    },
    "Date-Time": {
      "title": "Date Time",
      "type": "integer",
      "description": "Date and Time",
      "minimum": 0
    },
    "Duration": {
      "title": "Duration",
      "type": "integer",
      "description": "A length of time",
      "minimum": 0
    },
    "Feature": {
      "title": "Feature",
      "type": "string",
      "description": "Specifies the results to be returned from a query features Command",
      "enum": [
        "versions",
        "profiles",
        "pairs",
        "rate_limit"
      ]
    },
    "Hashes": {
      "title": "Hashes",
      "type": "object",
      "description": "Cryptographic hash values",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 100,
      "properties": {
        "md5": {
          "type": "string",
          "description": "MD5 hash as defined in [[RFC1321]](#rfc1321)",
          "contentEncoding": "base16"
        },
        "sha1": {
          "type": "string",
          "description": "SHA1 hash as defined in [[RFC6234]](#rfc6234)",
          "contentEncoding": "base16"
        },
        "sha256": {
          "type": "string",
          "description": "SHA256 hash as defined in [[RFC6234]](#rfc6234)",
          "contentEncoding": "base16"
        }
      }
    },
    "Nsid": {
      "title": "Nsid",
      "type": "string",
      "description": "A short identifier that refers to a namespace.",
      "minLength": 1,
      "maxLength": 16
    },
    "Response-Type": {
      "title": "Response Type",
      "type": "string",
      "enum": [
        "none",
        "ack",
        "status",
        "complete"
      ]
    },
    "Status-Code": {
      "title": "Status Code",
      "type": "integer",
      "enum": [
        102,
        200,
        201,
        400,
        401,
        403,
        404,
        500,
        501,
        503
      ]
    },
    "Command-ID": {
      "title": "Command ID",
      "type": "string",
      "description": "Command Identifier",
      "maxLength": 255,
      "pattern": "^\\S{0,36}$"
    },
    "SemVer": {
      "title": "SemVer",
      "type": "string",
      "description": "Major.Minor.Patch version number",
      "maxLength": 255,
      "pattern": "^(\\d{1,4})(\\.(\\d{1,6})){0,2}$"
    }
  }
}